/*
 * QuestionsDb.cpp
 *
 *  Created on: Aug 17, 2022
 *      Author: omarh
 */

#include "QuestionsDb.h"
#include "Question.h"

#include <algorithm>

QuestionsDb::QuestionsDb() {
	// TODO Auto-generated constructor stub

}

QuestionsDb::~QuestionsDb() {
	// TODO Auto-generated destructor stub
}

std::string QuestionsDb::get_path(){
	return path;
}

std::string QuestionsDb::get_delimiter(){
	return del;
}

void QuestionsDb::get_Q_toUser(const std::vector<std::string> v, std::map<int, std::vector<Question>>& mp, const int uId){
	if (!v[TO_ID].empty() && std::all_of(v[TO_ID].begin(), v[TO_ID].end(), ::isdigit) && stoi(v[TO_ID]) == uId)
	{
		update_question_info(v, q);
		if (q.threadId == -1)
			mp[q.id].push_back(q);
		else
		{
			mp[q.id].push_back(q);
			mp[q.threadId].push_back(q);
		}
	}
}

void QuestionsDb::update_question_info(const std::vector<std::string> &v, Question &q)
{
	q.id = (stoi(v[ID]));
	q.threadId = (stoi(v[THREAD_ID]));
	q.fromId = (stoi(v[FROM_ID]));
	q.toId = (stoi(v[TO_ID]));
	q.anon = stoi(v[ANONQ]);
	q.answered = (stoi(v[ANSWERED_BOOL]));
	q.text = v[QTEXT];
	q.ans = v[ANSWERTEXT];
}
