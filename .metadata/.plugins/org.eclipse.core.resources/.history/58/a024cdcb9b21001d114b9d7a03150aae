/*
 * App.cpp
 *
 *  Created on: Aug 10, 2022
 *      Author: omarh
 */

#include "App.h"
#include "User.h"
#include "Error.h"
#include "Inputscanner.h"
#include "Authenticator.h"
#include "AppMainMenu.h"
#include "Menu_printer.h"

App::App()
{
	// TODO Auto-generated constructor stub
}

App::~App()
{
	// TODO Auto-generated destructor stub
}
/* 1- get login choice from user */
/* 2- if logged in proceed to the main menu */
void App::run()
{
	User user;
	Menuprinter menu;
	Authenticator auth;
	Error error;
	Input_scanner input_scanner;
	AppMainMenu appMain;

	int choice;

	while (1)
	{
		while (1)
		{
			/* prints login menu */
			menu.menu_login();
			choice = input_scanner.get_choice(1, 3);
			if (!choice)
				continue;
			try
			{
				auth.access(choice, user);
				break;
			}
			catch (const int err)
			{
				error.print(err);
			}
		}
		while (1)
		{
			menu.menu_main();
			choice = input_scanner.get_choice(1, 8);
			if (!choice)
				continue;
			try
			{
				if(!appMain.run(choice, user))
					break;
			}
			catch (const int err)
			{
				error.print(err);
			}
		}
	}
}

/* 1- user enter question to answer */
/* 2- enter answer */
// void App::answer(const int uId)
//{
//	DbManager DB;
//	Error error;
//	Question q;
//	int qId;
//
//	/* user enter question to answer */
//	while (1)
//	{
//		std::cout << "Enter question id to answer or -1 to cancel: ";
//		std::cin >> qId;
//
//		if (qId == -1)
//			return;
//
//		/* check whether user received this question or not. can only answer if it is received */
//		if (!DB.check_user_has_q(qId, uId))
//			/* error: Question ID doesn't seem to exist for this user */
//			error.print(4);
//		else
//			break;
//	}
//	q = DB.questionsDb.get_question(qId).first;
//
//	q.print();
//	if (q.answered)
//		std::cout << "\n--- Warning: Question already answered. Answer will be overwritten ---\n\n";
//	std::cin.ignore();
//
//	/* enter answer */
//	std::cout << "Enter answer: ";
//	std::getline(std::cin, q.ans);
//	q.answered = 1;
//
//	DB.questionsDb.update_answer(q);
//	std::cout << "\n\n---- Answer Saved ----\n\n";
// }

/* 1- enter question id */
// void App::delete_question(const int uId)
//{
//	DbManager DB;
//	Error error;
//	Question q;
//	int qId;
//
//	/* enter question id */
//	while (1)
//	{
//		std::cout << "Enter question id to delete or -1 to cancel: ";
//		std::cin >> qId;
//
//		if (qId == -1)
//			return;
//
//		/* user can only delete question asked or received by user */
//		if (!DB.check_user_from_to_q(qId, uId))
//			/* error: Question ID doesn't seem to exist for this user */
//			error.print(4);
//		else
//			break;
//	}
//	DB.questionsDb.delete_q(qId);
//	std::cout << "\n\n ----- Question Deleted -----\n\n";
// }

// void App::list_users()
//{
//	DbManager DB;
//	DB.usersDb.print();
// }

// void App::print_feed()
//{
//	/* vector to store answered questions */
//	std::vector<Question> qv;
//	DbManager DB;
//	qv = DB.questionsDb.feed();
//	for (Question &q : qv)
//		q.print_feed();
// }
